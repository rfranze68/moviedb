{"version":3,"sources":["components/Autocomplete.js","components/Header.js","components/ContentCard.js","components/ContentPagination.js","Pages/All/All.js","Pages/Movies/Movies.js","components/ContentRow.js","Pages/Movies/MoviesDetails.js","Pages/Series/Series.js","Pages/Series/SeriesDetails.js","Pages/Persons/Persons.js","Pages/Persons/PersonsDetails.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["sleep","delay","Promise","resolve","setTimeout","InputAutoComplete","props","React","useState","options","setOptions","loading","setLoading","useEffect","searchQueryShowOptions","a","strSearchUrlOptions","API_URL_OPTIONS","searchQueryValue","axios","get","data","results","length","dataOptions","map","item","option","id","name","title","push","top100Films","Autocomplete","autoFocus","value","onChange","searchQueryOnChange","inputValue","onInputChange","freeSolo","open","getOptionSelected","searchQuerySelected","getOptionLabel","style","width","height","marginTop","marginLeft","marginRight","paddingTop","paddingBottom","paddingLeft","fontColor","background","overflow","renderInput","params","TextField","label","margin","InputProps","endAdornment","Fragment","CircularProgress","color","size","year","GreenRadio","withStyles","root","green","checked","Radio","Header","document","getElementById","focus","class","alt","src","process","RadioGroup","row","aria-label","searchTypeMedia","searchTypeOnSubmit","FormControlLabel","control","onClick","searchQueryOnSubmit","ContentCard","cardId","cardMediaType","cardImgPath","cardTitle","cardVoteAverage","cardTagColor","cardOverview","className","to","e","result","float","darkTheme","createMuiTheme","palette","type","useStyles","makeStyles","theme","selected","fontWeight","ContentPagination","setPage","numOfPages","classes","display","justifyContent","textAlign","fontFamily","backgroundColor","ThemeProvider","Pagination","count","page","window","scroll","variant","shape","showFirstButton","showLastButton","renderItem","PaginationItem","All","setNumOfPages","content","setContent","contentResults","setContentResults","loadingError","setLoadingError","API_IMAGES","fetchAll","strURL","API_URL","total_pages","total_results","error","setVoteClass","vote","media_type","imgPath","voteAverage","tagColor","overview","poster_path","vote_average","trim","profile_path","popularity","withRouter","fetchMovies","ContentRow","rowId","rowType","rowLink","rowImgPath","rowDescription1","rowDescription2","rowDescription3","setSubTitle","movieID","match","movieURLDetails","movieURLCredits","setContentDetails","contentDirector","setContentDirector","contentProducer","setContentProducer","contentScreenPlayer","setContentScreenPlayer","contentEditor","setContentEditor","contentProductionCountry","setContentProductionCountry","contentGenres","setContentGenres","contentCast","setcontentCast","getContentDetails","hasOwnProperty","movieGenres","genres","movieProductionCountry","production_countries","getContentCredits","movieDirector","movieProducer","movieScreenPlayer","movieEditor","crew","link","job","nameComma","movieCast","cast","imgpath","runtime","visibility","clear","date","Date","toLocaleDateString","setDateFormat","release_date","href","homepage","target","rel","tagline","character","fetchSeries","serieID","serieURLDetails","serieURLCredits","contentCreateBy","setContentCreateBy","setContentCast","serieCreateBy","created_by","serieGenres","serieProductionCountry","serieCast","strCharacter","roles","forEach","element","episode_count","original_name","first_air_date","number_of_episodes","number_of_seasons","last_air_date","last_episode_to_air","fetchPersons","personID","personURLDetails","personURLMovies","personURLSeries","contentMovies","setContentMovies","contentTVSeries","setContentTVSeries","getContentMovies","personMOVIES","description2","description3","sort","b","getContentTVSeries","personTVSERIES","biography","birthday","place_of_birth","deathday","appHistory","createBrowserHistory","API_ALL","API_ALL_SEARCH","API_MOVIES_SEARCH","API_TVS_SEARCH","API_PERSONS_SEARCH","App","componentDidUpdate","typeMedia","setState","state","queryValue","searchQuery","changeSearchURL","changeSearchPAGE","reason","clearSearchQuery","key","location","pathname","indexOf","searchQueryOptions","strSearchUrl","searchUrl","searchUrlOptions","history","Container","maxWidth","this","path","render","exact","Component","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","URL","origin","addEventListener","fetch","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ed6cd0ad.chunk.js","sourcesContent":["import '../App.css';\r\nimport axios from 'axios';\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nfunction sleep(delay = 0) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nexport default function InputAutoComplete(props) {\r\n\r\n  const [options, setOptions] = React.useState([]);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setLoading(true);\r\n    if (props.searchQueryShowOptions) {\r\n      (async () => {\r\n        const strSearchUrlOptions = props.API_URL_OPTIONS + `&page=1&query=${props.searchQueryValue}`;\r\n        const { data } = await axios.get(strSearchUrlOptions);\r\n        await sleep(1e3);\r\n        if (data.results.length > 0) {\r\n          const dataOptions = [];\r\n          data.results.map( item => {\r\n            const option = {};\r\n            option.id = item.id;\r\n            option.name = item.title||item.name;\r\n            dataOptions.push(option);\r\n          });\r\n          setOptions(dataOptions);\r\n        } else {\r\n          setOptions(top100Films);\r\n        }\r\n      })();\r\n    } else {\r\n      setOptions([]);\r\n    }\r\n    setLoading(false);\r\n  }, [props.searchQueryValue]);\r\n\r\n  //----> RENDER() <----//\r\n  return (\r\n    <Autocomplete key={9999} autoFocus id=\"inpSearch\" name=\"inpSearch\"\r\n      value={props.searchQueryValue}\r\n      onChange={props.searchQueryOnChange}\r\n      inputValue={props.searchQueryValue}\r\n      onInputChange={props.searchQueryOnChange}\r\n      freeSolo={true}\r\n      open={props.searchQueryShowOptions}\r\n      //getOptionSelected={(option, value) => option.name === value.name}\r\n      getOptionSelected={props.searchQuerySelected}\r\n      getOptionLabel={(option) => option.name}\r\n      options={options}\r\n      loading={loading}\r\n      style={{ width: \"250px\", \r\n              height: \"26px\",  \r\n              marginTop: \"8px\",\r\n              marginLeft: \"0px\",\r\n              marginRight: \"6px\",                       \r\n              paddingTop: \"0px\",\r\n              paddingBottom: \"6px\",\r\n              paddingLeft: \"2px\",\r\n              fontColor: \"#fff\",\r\n              background: \"#b6c0d4\",\r\n              overflow: \"hidden\"}}      \r\n      renderInput={(params) => (\r\n        <TextField key={83833}\r\n          {...params}\r\n          label=\"\"\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? <CircularProgress color=\"inherit\" size={20} /> : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\n\r\nconst top100Films = [\r\n  { name: 'The Shawshank Redemption', year: 1994 },\r\n  { name: 'The Godfather', year: 1972 },\r\n  { name: 'The Godfather: Part II', year: 1974 },\r\n  { name: 'The Dark Knight', year: 2008 },\r\n  { name: '12 Angry Men', year: 1957 },\r\n  { name: \"Schindler's List\", year: 1993 },\r\n  { name: 'Pulp Fiction', year: 1994 },\r\n  { name: 'The Lord of the Rings: The Return of the King', year: 2003 },\r\n  { name: 'The Good, the Bad and the Ugly', year: 1966 },\r\n  { name: 'Fight Club', year: 1999 },\r\n  { name: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\r\n  { name: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\r\n  { name: 'Forrest Gump', year: 1994 },\r\n  { name: 'Inception', year: 2010 },\r\n];","import './Header.css';\nimport React, { useEffect } from 'react';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport InputAutoComplete from './Autocomplete';\n\nconst GreenRadio = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600],\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\n// HEADER() ------------>\n// --------------------->\nconst Header = (props) => {\n\n  useEffect(() => {\n    document.getElementById(\"inpSearch\").focus(); \n  }, []);\n\n  // RENDER() ------------>\n  // --------------------->\n  return (\n    <>\n    <div class=\"contentHeader\">\n      <div class=\"header\">\n        <div id=\"col1\" class=\"headerColumn\">\n          <img id=\"imgLogo\" alt=\"App icon\" width=\"40\" src={process.env.PUBLIC_URL+'/green_app_icon.svg'} class=\"imgLogo\"/>\n          <label class=\"lblLogo\">MovieDB Search</label>\n          <label class=\"hg\">&nbsp;||&nbsp;</label>\n        </div>\n        <div id=\"col2\" class=\"headerColumn\">\n          <label id=\"lblSearch\" class=\"lblSearch\">Search:&nbsp;</label>\n          <RadioGroup id=\"radMediaType\" class=\"radSearch\" row aria-label=\"lblSearch\"\n                      value={props.searchTypeMedia} \n                      onChange={props.searchTypeOnSubmit}>\n            <FormControlLabel value=\"all\" control={<GreenRadio />} label=\"All\" />\n            <FormControlLabel value=\"movies\" control={<GreenRadio />} label=\"Movies\" />\n            <FormControlLabel value=\"tv\" control={<GreenRadio />} label=\"TV Series\" />\n            <FormControlLabel value=\"person\" control={<GreenRadio />} label=\"Actors\" />\n          </RadioGroup>         \n        </div>        \n        <div id=\"col3\" class=\"headerColumn\">\n            <InputAutoComplete key={75656} {...props} class=\"headerColumn\"/>\n            <img id=\"imgSearch\" name=\"imgSearch\" alt=\"Search\" class=\"imgSearch\" \n              onClick={props.searchQueryOnSubmit}\n              src={process.env.PUBLIC_URL+'/lupa.png'} />                              \n        </div>\n      </div>\n    </div>\n    </>\n  );\n};\nexport default Header;\n","import './ContentCard.css';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ContentCard = ({cardId, cardMediaType, cardImgPath, cardTitle, cardVoteAverage, cardTagColor, cardOverview}) => {\r\n\r\n  const mediaTypeURL = (e) => {\r\n    let result = '';\r\n    if (cardMediaType === 'movie') {\r\n      result = `/movies/details/${cardId}`;\r\n    } else if (cardMediaType === 'tv') {\r\n      result = `/series/details/${cardId}`;\r\n    } else if (cardMediaType === 'person') {\r\n      result = `/persons/details/${cardId}`;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  return ( \r\n    <div className=\"card\">\r\n      <Link to={mediaTypeURL}>\r\n        <img src={cardImgPath} alt = {cardTitle} />\r\n        <div className=\"cardInfo\">\r\n          <div style={{float: \"left\"}}>\r\n            <h3>{cardTitle}</h3>            \r\n          </div>\r\n          <div style={{float: \"right\"}}>\r\n            <span className={`tag ${cardTagColor}`}>{cardVoteAverage}</span>            \r\n          </div>\r\n        </div>\r\n        <div className=\"cardOver\">\r\n          <h2>Overview ({cardMediaType}):</h2>\r\n          <p>{cardOverview}</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default ContentCard;","import React from \"react\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport PaginationItem from '@material-ui/lab/PaginationItem';\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst darkTheme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n  },\n});\n\nconst useStyles = makeStyles((theme) =>({\n  selected: {\n        background: \"#FFF\",\n        color:\"#FFF\",\n        fontWeight: \"bold\",\n    },\n  }),\n);\n\nexport default function ContentPagination({ setPage, numOfPages = 10 }) {\n  const classes = useStyles();\n  // Scroll to top when page changes\n  const handlePageChange = (e, page) => {\n    setPage(page);\n    window.scroll(0, 0);\n  };\n//                  onChange={(e) => handlePageChange(e.target.textContent)}\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        color: \"#fff\",\n        textAlign: \"center\",        \n        fontFamily: \"inherit\",\n        fontWeight: \"bold\",\n        backgroundColor: \"#373b69\",\n        overflow: \"hidden\",\n      }}\n    >\n      <ThemeProvider theme={darkTheme}>\n        <Pagination id=\"navBottom\"\n                    count={numOfPages} \n                    onChange={handlePageChange}\n                    variant=\"outlined\" \n                    shape=\"rounded\"  \n                    color=\"primary\"\n                    showFirstButton \n                    showLastButton\n                    renderItem={(item)=> <PaginationItem {...item} classes={{selected:classes.selected}} />} />\n      </ThemeProvider>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport ContentCard from \"../../components/ContentCard\";\nimport ContentPagination from \"../../components/ContentPagination\";\n\nconst All = (props) => {\n\n  const [page, setPage] = useState(1);  \n  const [numOfPages, setNumOfPages] = useState();\n  const [content, setContent] = useState([]);\n  const [contentResults, setContentResults] = useState(0);\n  const [loadingError, setLoadingError] = useState('');\n  const API_IMAGES = props.API_IMAGES;\n  \n  const fetchAll = async () => {\n    try {\n      setLoadingError(`WAIT ... loading data from API...`);\n      const strURL = props.API_URL+`&page=${page}`;  \n      const { data } = await axios.get(strURL);\n      if (data.results.length > 0) {\n        setContent(data.results);\n        setNumOfPages(data.total_pages);\n        setContentResults(data.total_results);\n      } else {\n        setLoadingError(`ERROR NO DATA AVAILABLE ON THIS SEARCH`);\n      }\n    } catch (error) {\n      setLoadingError(`ERROR Loading API: ${{error}}`);\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchAll();\n  }, [page, props.API_URL]);\n\n  const setVoteClass = (vote) => {\n    if (vote >= 8) { return 'green'; }\n    else if (vote >= 6) { return 'orange'; }\n    else { return 'red'; }\n  };\n  // ---> RENDER/RETURN <---\n  return (\n    <div>\n      <div className=\"contentContainer\">\n        {(contentResults === 0) ? (<h3>{loadingError}</h3>)\n                                : (content.map(item => {\n                                    const cardMediaType = item.media_type;\n                                    let imgPath = 'question.jpg';\n                                    let title = '';\n                                    let voteAverage = '*';\n                                    let tagColor = 'red';\n                                    let overview = '... no synopsis ...';\n                                    if (cardMediaType === 'movie') {\n                                      imgPath = item.poster_path ? (API_IMAGES + item.poster_path) : 'movie.jpg';\n                                      title = item.title;\n                                      voteAverage = item.vote_average;\n                                      tagColor = setVoteClass(item.vote_average);\n                                      overview = (item.overview.trim() !== '') ? item.overview : overview;\n                                    } else if (cardMediaType === 'tv') {\n                                      imgPath = item.poster_path ? (API_IMAGES + item.poster_path) : 'tv.png';\n                                      title = item.name;\n                                      voteAverage = item.vote_average;\n                                      tagColor = setVoteClass(item.vote_average);\n                                      overview = (item.overview.trim() !== '') ? item.overview : overview;\n                                    } else if (cardMediaType === 'person') {\n                                      imgPath = (item.profile_path ? (API_IMAGES + item.profile_path) : 'person.jpg');\n                                      title = item.name;\n                                      voteAverage = item.popularity;\n                                      tagColor = setVoteClass(item.popularity);\n                                    }\n                                    return (<ContentCard key={item.id}\n                                        cardId={item.id}\n                                        cardMediaType={cardMediaType}                                      \n                                        cardImgPath={imgPath}\n                                        cardTitle={title}\n                                        cardVoteAverage={voteAverage}\n                                        cardTagColor={tagColor}\n                                        cardOverview={overview} />); })\n        )}\n      </div>\n      {numOfPages > 1 && (\n        <ContentPagination setPage={setPage} numOfPages={numOfPages} />\n      )}\n    </div>\n  );\n};\nexport default All;\n// END ------------------>> \n","import axios from 'axios';\nimport { useEffect, useState } from \"react\";\nimport { withRouter } from 'react-router-dom';\n\nimport ContentCard from \"../../components/ContentCard\";\nimport ContentPagination from \"../../components/ContentPagination\";\n\nconst Movies = (props) => {\n\n  const [page, setPage] = useState(1); \n  const [numOfPages, setNumOfPages] = useState();  \n  const [content, setContent] = useState([]);\n  const [contentResults, setContentResults] = useState(0);\n  const [loadingError, setLoadingError] = useState('ERROR: No Results Found!!!');\n  const API_IMAGES = props.API_IMAGES;\n\n  const fetchMovies = async () => {\n    try {\n      setLoadingError(`WAIT ... loading data from API...`);\n      const strURL = props.API_URL+`&page=${page}`;  \n      const { data } = await axios.get(strURL);\n      if (data.results.length > 0) {\n        setContent(data.results);\n        setNumOfPages(data.total_pages);\n        setContentResults(data.total_results);\n      } else {\n        setLoadingError(`ERROR NO DATA AVAILABLE ON THIS SEARCH`);\n      }\n    } catch (error) {\n      setLoadingError(`ERROR Loading API: ${{error}}`);\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchMovies();\n  }, [page, props.API_URL]);\n\n  const setVoteClass = (vote) => {\n    if (vote >= 8) { return 'green'; }\n    else if (vote >= 6) { return 'orange'; }\n    else { return 'red'; }\n  }; \n  // ---> RENDER/RETURN <---\n  return (\n    <div>\n      <div className=\"contentContainer\">\n        {(contentResults === 0) ? (<h3>{loadingError}</h3>)\n                                : (content.map(item => {\n                                      return (<ContentCard key={item.id}\n                                          cardId={item.id}\n                                          cardMediaType={'movie'}                                      \n                                          cardImgPath={(item.poster_path ? (API_IMAGES + item.poster_path) : 'movie.jpg')}\n                                          cardTitle={item.title}\n                                          cardVoteAverage={item.vote_average}\n                                          cardTagColor={setVoteClass(item.vote_average)}\n                                          cardOverview={((item.overview.trim() !== '') ? item.overview : '... no synopsis ...')} />\n                                        );\n                                  }) )}\n      </div>\n      {numOfPages > 1 && (\n        <ContentPagination setPage={setPage} numOfPages={numOfPages} /> )}\n    </div>\n  );\n};\nexport default withRouter(Movies);\n// END ------------------>> \n","import '../components/ContentRow.css';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ContentRow = ({rowId, rowType, rowLink, rowImgPath, rowDescription1, rowDescription2, rowDescription3 }) => {\r\n\r\n  const setSubTitle = (rowType) => {\r\n    let result = '';\r\n    if (rowType === 'movie') {\r\n      result = 'Movies:';  \r\n    } else if (rowType === 'tv') {\r\n      result = 'Series:';\r\n    } else if (rowType === 'person') {\r\n      result = 'Character:';      \r\n    } else if (rowType !== '') {\r\n      result = rowType;\r\n    }\r\n    return result; \r\n  };\r\n\r\n  return ( \r\n    <div class=\"row\"> \r\n        <div class=\"rowImg\">\r\n          <Link to={rowLink}>\r\n            <img src={rowImgPath} alt={rowDescription1}/></Link>\r\n        </div>\r\n        <div class=\"rowInfo\">\r\n          <Link to={rowLink}>\r\n            <br/>\r\n            <hp>{rowDescription1||''}</hp>\r\n            <br/>\r\n            <hg>{setSubTitle(rowType)||''}</hg>\r\n            <br/>\r\n            {rowDescription2||''}\r\n            <br/>\r\n            {rowDescription3||''}</Link>   \r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentRow;","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport '../ContainerDetails.css';\r\nimport ContentRow from '../../components/ContentRow.js'\r\n\r\nconst MoviesDetails = (props) => {\r\n  \r\n  const movieID = props.id.match.params.id;\r\n  const API_IMAGES = `https://image.tmdb.org/t/p/w1280`;\r\n  const movieURLDetails = `https://api.themoviedb.org/3/movie/${movieID}?api_key=ddeaf71f8f5eb42fd183f981de0978e8&language=en-US&append_to_response=videos,images`;\r\n  const movieURLCredits = `https://api.themoviedb.org/3/movie/${movieID}/credits?api_key=ddeaf71f8f5eb42fd183f981de0978e8&language=en-US`;\r\n  const [content, setContentDetails] = useState([]);\r\n  const [contentDirector, setContentDirector] = useState([]);\r\n  const [contentProducer, setContentProducer] = useState([]);\r\n  const [contentScreenPlayer, setContentScreenPlayer] = useState([]);\r\n  const [contentEditor, setContentEditor] = useState([]);\r\n  const [contentProductionCountry, setContentProductionCountry] = useState([]);\r\n  const [contentGenres, setContentGenres] = useState('');\r\n  const [contentCast, setcontentCast] = useState([]);  \r\n\r\n  const getContentDetails = async () => {\r\n    let { data } = await axios.get(movieURLDetails);\r\n    if (data) {\r\n      setContentDetails(data);       \r\n      if (data.hasOwnProperty(\"genres\")) {\r\n        let movieGenres = '';\r\n        data.genres.map(item => {      \r\n          movieGenres += ((movieGenres) ? ', ' : '') + item.name;\r\n        });\r\n        setContentGenres(movieGenres);\r\n      }\r\n      if (data.hasOwnProperty(\"production_countries\")) {\r\n        let movieProductionCountry = '';\r\n        data.production_countries.map(item => {      \r\n          movieProductionCountry += ((movieProductionCountry) ? ', ' : '') + item.name;\r\n        });\r\n        setContentProductionCountry(movieProductionCountry);\r\n      }\r\n    } // if (data) {\r\n  };\r\n\r\n  const getContentCredits = async () => {\r\n    const { data } = await axios.get(movieURLCredits);\r\n    if ((data) && (data.hasOwnProperty(\"crew\"))) {\r\n      const movieDirector = [];\r\n      const movieProducer = [];\r\n      const movieScreenPlayer = [];\r\n      const movieEditor = [];\r\n      data.crew.map((item) => {\r\n        item.link = `/persons/details/${item.id}`;\r\n        if (item.job === \"Director\") {\r\n          item.nameComma = ((movieDirector.length > 0) ? ', ' : '') + item.name;   \r\n          movieDirector.push(item);\r\n        } else if (item.job === \"Producer\") {\r\n          item.nameComma = ((movieProducer.length > 0) ? ', ' : '') + item.name;\r\n          movieProducer.push(item);\r\n        }  else if (item.job === \"Screenplay\") {\r\n          item.nameComma = ((movieScreenPlayer.length > 0) ? ', ' : '') + item.name;\r\n          movieScreenPlayer.push(item);\r\n        }  else if (item.job === \"Editor\") {\r\n          item.nameComma = ((movieEditor.length > 0) ? ', ' : '') + item.name;\r\n          movieEditor.push(item);\r\n        }\r\n      }); //data.crew.map((item) => {\r\n      setContentDirector(movieDirector);\r\n      setContentProducer(movieProducer);\r\n      setContentScreenPlayer(movieScreenPlayer);\r\n      setContentEditor(movieEditor);\r\n    } //if ((data) && (data.hasOwnProperty(\"crew\"))) {\r\n    if ((data) && (data.hasOwnProperty(\"cast\"))) {\r\n      const movieCast = [];\r\n      data.cast.map((item) => {\r\n        item.link = `/persons/details/${item.id}`;   \r\n        item.imgpath = (item.profile_path ? (API_IMAGES + item.profile_path) : (process.env.PUBLIC_URL+'/person.jpg'));\r\n        movieCast.push(item);\r\n      }); //data.cast.map((item) => {\r\n      setcontentCast(movieCast);\r\n    } //if ((data) && (data.hasOwnProperty(\"cast\"))) {\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0); \r\n    getContentDetails();\r\n    getContentCredits();\r\n  },[]);\r\n\r\n  // ----------->\r\n\r\n  const setDateFormat = (date) => {\r\n    let result = '';\r\n    if (date) {\r\n      const newDateFormat = new Date(date);\r\n      result = newDateFormat.toLocaleDateString();\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const setVoteClass = (vote) => {\r\n    if (vote) {\r\n      document.getElementById(\"contentVote\").style.visibility=\"visible\";\r\n      if (vote >= 8) { return 'green'; }\r\n      else if (vote >= 6) { return 'orange'; }\r\n      else { return 'red'; }      \r\n    }\r\n  };\r\n\r\n  // ------ \"RENDER\" ------- //\r\n  return ( \r\n    <div className=\"contentContainer\">\r\n      <div id=\"ContentDetails\" class=\"details\">\r\n        <div id=\"contentDetailsImg\" class=\"detailsImg\">\r\n          <img src={content.poster_path ? `${API_IMAGES}/${content.poster_path}`:(process.env.PUBLIC_URL+'/movie.jpg')} \r\n              alt={content.name || content.title} />\r\n        </div>\r\n        <div id=\"contentDetailsInfo\" class=\"detailsInfo\">\r\n          <div id=\"contentDetailsInfoHeader\" class=\"detailsInfoHeader\">\r\n            <p class=\"title\">MOVIE TITLE</p>\r\n              <h1>{content.title}</h1>\r\n          </div>\r\n          <div id=\"contentDetailsInfoBody\" class=\"detailsInfoBody\">\r\n            <p class=\"title\">OVERVIEW</p>\r\n            <p style={{textAlign: \"justify\"}}>{content.overview || '... no synopsis ...'}</p>\r\n            <p>\r\n              <div style={{float: \"left\"}}>\r\n                <hg>Running time:</hg>&nbsp;&nbsp;{content.runtime}&nbsp;minutes               \r\n              </div>\r\n              <div id=\"contentVote\" style={{visibility: \"hidden\", float: \"right\"}}>\r\n                <hg>Popularity:</hg>&nbsp;&nbsp;<span class={`tag ${setVoteClass(content.vote_average)}`}>{content.vote_average}</span>\r\n              </div></p>\r\n            <p style={{clear: \"both\"}}>\r\n              <div>\r\n                <br/><hg>Directed by:</hg>&nbsp;&nbsp;{(contentDirector.map(item => {\r\n                    return (<Link to={(item.link)}>{item.nameComma}</Link>)\r\n                  }))}\r\n                <br/><hg>Produced by:</hg>&nbsp;&nbsp;{(contentProducer.map(item => {\r\n                    return (<Link to={(item.link)}>{item.nameComma}</Link>)\r\n                  }))}\r\n                <br/><hg>Screenplay by:</hg>&nbsp;&nbsp;{(contentScreenPlayer.map(item => {\r\n                    return (<Link to={(item.link)}>{item.nameComma}</Link>)\r\n                  }))}\r\n                <br/><hg>Edited by:</hg>&nbsp;&nbsp;{(contentEditor.map(item => {\r\n                    return (<Link to={(item.link)}>{item.nameComma}</Link>)\r\n                  }))}\r\n              </div></p>\r\n            <p>\r\n              <div>\r\n                <hg>Release date:</hg>&nbsp;&nbsp;{setDateFormat(content.release_date)}&nbsp;&nbsp;&nbsp;&nbsp;<hg>Country:</hg>&nbsp;&nbsp;{contentProductionCountry}\r\n              </div></p>\r\n            <p style={{clear: \"both\"}}>\r\n              <hg>Home Page:</hg>&nbsp;&nbsp;<a href={content.homepage} target=\"_blank\" rel=\"noreferrer noopener\">{content.homepage}</a></p>\r\n            <p class=\"title\">GENRES</p>\r\n            <p>{contentGenres}</p>\r\n            <p></p>\r\n            <p class=\"title\">TAGLINE</p>\r\n            <p>{content.tagline  || '... no tagline ...'}</p>\r\n          </div>\r\n        </div>\r\n      </div>  \r\n      <div id=\"contentCast\" class=\"detailsBox\" style={{visibility: \"visible\"}}>\r\n        <p class=\"title\">Found {contentCast.length} MOVIE CASTs</p>\r\n        <div id=\"contentCastIn\" class=\"detailsBoxIn\">\r\n          <br/>          \r\n          {contentCast.map(item => { \r\n            return (\r\n              < ContentRow key={item.id}\r\n                  rowId={item.id}\r\n                  rowType={'person'}\r\n                  rowLink={item.link}\r\n                  rowImgPath={item.imgpath}\r\n                  rowDescription1={item.name}                  \r\n                  rowDescription2={item.character}\r\n                  rowDescription3={''} />); })}\r\n        </div>\r\n      </div>  \r\n    </div>\r\n  );\r\n}\r\n// ------------------------------------------------->\r\nexport default withRouter(MoviesDetails);\r\n// ------------------------------------------------->","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { withRouter } from 'react-router-dom';\n\nimport ContentCard from \"../../components/ContentCard\";\nimport ContentPagination from \"../../components/ContentPagination\";\n\nconst Series = (props) => {\n\n  const [page, setPage] = useState(1);\n  const [numOfPages, setNumOfPages] = useState(1);  \n  const [content, setContent] = useState([]);\n  const [contentResults, setContentResults] = useState(0);\n  const [loadingError, setLoadingError] = useState('ERROR: No Results Found!!!');\n  const API_IMAGES = props.API_IMAGES;\n\n  const fetchSeries = async () => {\n    try {\n      setLoadingError(`WAIT ... loading data from API...`);\n      const strURL = props.API_URL+`&page=${page}`;\n      const { data } = await axios.get(strURL);\n      if (data.results.length > 0) {\n        setContent(data.results);\n        setNumOfPages(data.total_pages);\n        setContentResults(data.total_results);\n      } else {\n        setLoadingError(`ERROR NO DATA AVAILABLE ON THIS SEARCH`);\n      }\n    } catch (error) {\n      setLoadingError(`ERROR Loading API: ${{error}}`);\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchSeries();\n  }, [page, props.API_URL]);\n\n  const setVoteClass = (vote) => {\n    if (vote >= 8) { return 'green'; }\n    else if (vote >= 6) { return 'orange'; }\n    else { return 'red'; }\n  };  \n  // ---> RENDER/RETURN <---\n  return (\n    <div>\n      <div className=\"contentContainer\">\n        {(contentResults === 0) ? (<h3>{loadingError}</h3>)\n                                : (content.map(item => {\n                                      return (\n                                        <ContentCard key={item.id}\n                                          cardId={item.id}\n                                          cardMediaType={'tv'}                                      \n                                          cardImgPath={(item.poster_path ? (API_IMAGES + item.poster_path) : 'movie.jpg')}\n                                          cardTitle={item.name}\n                                          cardVoteAverage={item.vote_average}\n                                          cardTagColor={setVoteClass(item.vote_average)}\n                                          cardOverview={((item.overview.trim() !== '') ? item.overview : '... no synopsis ...')} />\n                                        );\n                                  }) )}\n      </div>\n      {numOfPages > 1 && (\n        <ContentPagination setPage={setPage} numOfPages={numOfPages} />)}\n    </div>\n  );\n};\nexport default withRouter(Series);\n// END ------------------>> ","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport '../ContainerDetails.css';\r\nimport ContentRow from '../../components/ContentRow.js'\r\n\r\nconst SeriesDetails = (props) => {\r\n  \r\n  const serieID = props.id.match.params.id;\r\n  const API_IMAGES = `https://image.tmdb.org/t/p/w1280`;\r\n  const serieURLDetails = `https://api.themoviedb.org/3/tv/${serieID}?api_key=ddeaf71f8f5eb42fd183f981de0978e8&language=en-US&append_to_response=videos,images`; \r\n  const serieURLCredits = `https://api.themoviedb.org/3/tv/${serieID}/aggregate_credits?api_key=ddeaf71f8f5eb42fd183f981de0978e8&language=en-US`; \r\n  const [content, setContentDetails] = useState([]);\r\n  const [contentCreateBy, setContentCreateBy] = useState([]);\r\n  const [contentProductionCountry, setContentProductionCountry] = useState([]);\r\n  const [contentGenres, setContentGenres] = useState('');\r\n  const [contentCast, setContentCast] = useState([]);  \r\n\r\n  const getContentDetails = async () => {\r\n    let { data } = await axios.get(serieURLDetails);\r\n    if (data) {\r\n      setContentDetails(data);\r\n      //\r\n      if (data.hasOwnProperty(\"created_by\")) {\r\n        const serieCreateBy = [];       \r\n        data.created_by.map(item => {     \r\n          item.link = `/persons/details/${item.id}`; \r\n          item.imgpath = (item.profile_path ? (API_IMAGES + item.profile_path) : (process.env.PUBLIC_URL+'/person.jpg'));\r\n          item.nameComma = ((serieCreateBy.length > 0) ? ', ' : '') + item.name;\r\n          serieCreateBy.push(item);         \r\n        }); //data.created_by.map((item) => {\r\n        setContentCreateBy(serieCreateBy);     \r\n      }\r\n      //\r\n      if (data.hasOwnProperty(\"genres\")) {\r\n        let serieGenres = '';\r\n        data.genres.map(item => {      \r\n          serieGenres += ((serieGenres) ? ', ' : '') + item.name;\r\n          return serieGenres;\r\n        });\r\n        setContentGenres(serieGenres);\r\n      }\r\n      //\r\n      if (data.hasOwnProperty(\"production_countries\")) {\r\n        let serieProductionCountry = '';\r\n        data.production_countries.map(item => {      \r\n          serieProductionCountry += ((serieProductionCountry) ? ', ' : '') + item.name;\r\n          return serieProductionCountry;\r\n        });\r\n        setContentProductionCountry(serieProductionCountry);\r\n      }\r\n    } // if (data) {\r\n  };\r\n\r\n  const getContentCredits = async () => {\r\n    const { data } = await axios.get(serieURLCredits);\r\n    if ((data) && (data.hasOwnProperty(\"cast\"))) {\r\n      const serieCast = [];\r\n      data.cast.map((item) => {\r\n        let strCharacter = '';\r\n        item.link = `/persons/details/${item.id}`;   \r\n        item.imgpath = (item.profile_path ? (API_IMAGES + item.profile_path) : (process.env.PUBLIC_URL+'/person.jpg'));\r\n        item.roles.forEach(element => {\r\n          strCharacter += ((strCharacter.length > 0) ? ', ' : '') + `${element.character} [ ${element.episode_count} episodes ]`;          \r\n        });\r\n        item.character = strCharacter;\r\n        serieCast.push(item);\r\n      }); //data.cast.map((item) => {\r\n      setContentCast(serieCast);\r\n    } //if ((data) && (data.hasOwnProperty(\"cast\"))) {\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n    getContentDetails();\r\n    getContentCredits();\r\n  },[]);\r\n\r\n  // ----------->\r\n\r\n  const setDateFormat = (date) => {\r\n    let result = '';\r\n    if (date) {\r\n      const newDateFormat = new Date(date);\r\n      result = newDateFormat.toLocaleDateString();\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const setVoteClass = (vote) => {\r\n    if (vote) {\r\n      document.getElementById(\"contentVote\").style.visibility=\"visible\";\r\n      if (vote >= 8) { return 'green'; }\r\n      else if (vote >= 6) { return 'orange'; }\r\n      else { return 'red'; }      \r\n    }\r\n  };\r\n  // ------------------------------------------------->\r\n  // -------------------- \"RENDER\" ------------------ //\r\n  return ( \r\n    <div className=\"contentContainer\">\r\n      <div id=\"ContentDetails\" class=\"details\">\r\n        <div id=\"contentDetailsImg\" class=\"detailsImg\">\r\n          <img src={content.poster_path ? `${API_IMAGES}${content.poster_path}`:(process.env.PUBLIC_URL+'/serie.jpg')} \r\n                    alt={content.name || content.title} /> \r\n        </div>\r\n        <div id=\"contentDetailsInfo\" class=\"detailsInfo\">\r\n          <div id=\"contentDetailsInfoHeader\" class=\"detailsInfoHeader\">\r\n             <p class=\"title\">SERIE NAME</p>\r\n            <h1>{content.name}</h1>\r\n          </div>\r\n          <div id=\"contentDetailsInfoBody\" class=\"detailsInfoBody\">\r\n            <p class=\"title\">OVERVIEW</p>\r\n            <p style={{textAlign: \"justify\"}}>{content.overview || '... no synopsis ...'}</p>\r\n            <p>\r\n              <div style={{float: \"left\"}}>\r\n                  <hg>Create by:</hg>&nbsp;&nbsp;{(contentCreateBy.map(item => {\r\n                    return (<Link to={(item.link)}>{item.nameComma}</Link>)\r\n                  }))}      \r\n              </div>\r\n              <div id=\"contentVote\" style={{visibility: \"hidden\", float: \"right\"}}>\r\n                <hg>Popularity:</hg>&nbsp;&nbsp;<span class={`tag ${setVoteClass(content.vote_average)}`}>{content.vote_average}</span>\r\n              </div></p>\r\n            <br style={{clear: \"both\"}}/>\r\n            <p>\r\n              <div>\r\n                <hg>Country Origin:</hg>&nbsp;&nbsp;{contentProductionCountry}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <br/>\r\n                <hg>Original Name:</hg>&nbsp;&nbsp;{`\"${content.original_name||''}\"`}\r\n                <br/><br/>\r\n                <hg>1o Episode Date:</hg>&nbsp;&nbsp;{setDateFormat(content.first_air_date)}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <br/>\r\n                <hg>Number of Episodes:</hg>&nbsp;&nbsp;{content.number_of_episodes||''}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <hg>Number of Sessons:</hg>&nbsp;&nbsp;{content.number_of_seasons||''}\r\n                <br/>\r\n                <hg>Last Episode Date:</hg>&nbsp;&nbsp;{setDateFormat(content.last_air_date)}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <br/>\r\n                <hg>Last Episode Name:</hg>&nbsp;&nbsp;{(content.hasOwnProperty('last_episode_to_air.name') && (`\"`+content.last_episode_to_air.name+`\"`))}\r\n                <br/>\r\n                <hg>Last Episode Synopsis:</hg>&nbsp;&nbsp;{(content.hasOwnProperty('last_episode_to_air.overview') && (`\"`+content.last_episode_to_air.overview+`\"`))}\r\n              </div></p>\r\n            <p>\r\n              <hg>Home Page:</hg>&nbsp;&nbsp;<a href={content.homepage} target=\"_blank\" rel=\"noreferrer noopener\">{content.homepage}</a></p>\r\n            <p class=\"title\">GENRES</p>\r\n            <p>{contentGenres}</p>\r\n            <p></p>\r\n            <p class=\"title\">TAGLINE</p>\r\n            <p>{content.tagline  || '... no tagline ...'}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"contentCast\" class=\"detailsBox\" style={{visibility: \"visible\"}}>\r\n        <p class=\"title\">SERIE CAST</p>\r\n        <div id=\"contentCastIn\" class=\"detailsBoxIn\">\r\n          <br/>          \r\n          {contentCast.map(item => { \r\n            return (\r\n              < ContentRow key={item.id}\r\n                  rowId={item.id}\r\n                  rowType={'person'}\r\n                  rowLink={item.link}\r\n                  rowImgPath={item.imgpath}\r\n                  rowDescription1={item.name}                  \r\n                  rowDescription2={item.character}\r\n                  rowDescription3={''} />); })}\r\n        </div>\r\n      </div>   \r\n    </div>\r\n  );\r\n}\r\n// ------------------------------------------------->\r\nexport default withRouter(SeriesDetails);\r\n// ------------------------------------------------->","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { withRouter } from 'react-router-dom';\n\nimport ContentCard from \"../../components/ContentCard\";\nimport ContentPagination from \"../../components/ContentPagination\";\n\nconst Persons = (props) => {\n\n  const [page, setPage] = useState(1);\n  const [numOfPages, setNumOfPages] = useState();  \n  const [content, setContent] = useState([]);\n  const [contentResults, setContentResults] = useState(0);\n  const [loadingError, setLoadingError] = useState('ERROR: No Results Found!!!');\n  const API_IMAGES = props.API_IMAGES;\n  \n  const fetchPersons = async () => {\n    try {\n      setLoadingError(`WAIT ... loading data from API...`);\n      const strURL = props.API_URL+`&page=${page}`;\n      const { data } = await axios.get(strURL);\n      if (data.results.length > 0) {  \n        setContent(data.results);\n        setNumOfPages(data.total_pages);\n        setContentResults(data.total_results);\n      } else {\n        setLoadingError(`ERROR NO DATA AVAILABLE ON THIS SEARCH`);\n      }\n    } catch (error) {\n      setLoadingError(`ERROR Loading API: ${{error}}`);\n    }\n  };\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    fetchPersons();\n   }, [page, props.API_URL]);\n\n   const setVoteClass = (vote) => {\n    if (vote >= 8) { return 'green'; }\n    else if (vote >= 6) { return 'orange'; }\n    else { return 'red'; }\n  };  \n  // ---> RENDER/RETURN <---\n  return (\n    <div>\n      <div className=\"contentContainer\">\n        {(contentResults === 0) ? (<h3>{loadingError}</h3>)\n                                : (content.map(item => {\n                                      return (<ContentCard key={item.id}\n                                        cardId={item.id}\n                                        cardMediaType={'person'}                                      \n                                        cardImgPath={(item.profile_path ? (API_IMAGES + item.profile_path) : 'person.jpg')}\n                                        cardTitle={item.name}\n                                        cardVoteAverage={item.popularity}\n                                        cardTagColor={setVoteClass(item.popularity)}\n                                        cardOverview={'... no synopsis ...'} />);\n                                    })) }\n      </div>\n      {numOfPages > 1 && (\n        <ContentPagination setPage={setPage} numOfPages={numOfPages} />\n      )}\n    </div>\n  );\n};\nexport default withRouter(Persons);\n// END ------------------>> \n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport '../ContainerDetails.css';\r\nimport ContentRow from '../../components/ContentRow.js'\r\n\r\n// ------------------------------------------------->\r\nconst PersonsDetails = (props) => {\r\n  \r\n  const personID = props.id.match.params.id;\r\n  const API_KEY = 'ddeaf71f8f5eb42fd183f981de0978e8';\r\n  const API_IMAGES = `https://image.tmdb.org/t/p/w1280`;\r\n  const personURLDetails = `https://api.themoviedb.org/3/person/${personID}?api_key=ddeaf71f8f5eb42fd183f981de0978e8&language=en-US&append_to_response=videos,images`;\r\n  const personURLMovies = `https://api.themoviedb.org/3/person/${personID}/movie_credits?api_key=ddeaf71f8f5eb42fd183f981de0978e8&language=en-US`;\r\n  const personURLSeries = `https://api.themoviedb.org/3/person/${personID}/tv_credits?api_key=ddeaf71f8f5eb42fd183f981de0978e8&language=en-US`;\r\n\r\n  const [content, setContentDetails] = useState([]);\r\n  const [contentMovies, setContentMovies] = useState([]);\r\n  const [contentTVSeries, setContentTVSeries] = useState([]);\r\n\r\n  const getContentDetails = async () => {\r\n    let { data } = await axios.get(personURLDetails);\r\n    if (data) {\r\n      setContentDetails(data);       \r\n    } // if (data) {\r\n  };\r\n  // ------------------------------------------------->\r\n  const getContentMovies = async () => {\r\n    const { data } = await axios.get(personURLMovies);\r\n    if (data) {\r\n      const personMOVIES = [];\r\n      //\r\n      if (data.hasOwnProperty(\"cast\")) {\r\n        data.cast.map((item) => {\r\n          item.type = `Character:`;\r\n          item.link = `/movies/details/${item.id}`;   \r\n          item.imgpath = (item.poster_path ? (API_IMAGES + item.poster_path) : (process.env.PUBLIC_URL+'/movie.jpg'));\r\n          item.description2 = (item.character && item.character.trim());\r\n          item.description3 = `Release: ${setDateFormat(item.release_date)}`;\r\n          personMOVIES.push(item);\r\n        });  \r\n      } // if (data.hasOwnProperty(\"cast\")) {\r\n      //\r\n      if (data.hasOwnProperty(\"crew\")) {\r\n        data.crew.map((item) => {\r\n          item.type = `Role:`;\r\n          item.link = `/movies/details/${item.id}`;   \r\n          item.imgpath = (item.poster_path ? (API_IMAGES + item.poster_path) : (process.env.PUBLIC_URL+'/movie.jpg'));\r\n          item.description2 = (item.job && item.job.trim());\r\n          item.description3 = `Release: ${setDateFormat(item.release_date)}`;\r\n          personMOVIES.push(item);\r\n        });       \r\n      } //if (data.hasOwnProperty(\"crew\")) {\r\n      // After, in the end, do descrescent Order\r\n      personMOVIES.sort((a, b) => (a.release_date > b.release_date) ? -1 : 1) \r\n      setContentMovies(personMOVIES);\r\n      //document.getElementById(\"contentMovies\").style.visibility = (personMOVIES.length > 0) ? \"visible\" : \"hidden\" ;\r\n    } //if ((data) && (data.hasOwnProperty(\"cast\"))) {   \r\n  };\r\n  // ------------------------------------------------->\r\n  const getContentTVSeries = async () => {\r\n    const { data } = await axios.get(personURLSeries);\r\n    if (data) {\r\n      const personTVSERIES = [];\r\n      //\r\n      if (data.hasOwnProperty(\"cast\")) {\r\n        data.cast.map((item) => {\r\n          item.type = `Character:`;\r\n          item.link = `/series/details/${item.id}`;   \r\n          item.imgpath = (item.poster_path ? (API_IMAGES + item.poster_path) : (process.env.PUBLIC_URL+'/movie.jpg'));\r\n          item.description2 = (item.character && item.character.trim());\r\n          item.description3 = `Release: ${setDateFormat(item.first_air_date)}`;\r\n          personTVSERIES.push(item);\r\n        }); //data.cast.map((item) => {        \r\n      } // if (data.hasOwnProperty(\"cast\")) {\r\n      //\r\n      if (data.hasOwnProperty(\"crew\")) {\r\n        data.crew.map((item) => {\r\n          item.type = `Role:`;\r\n          item.link = `/series/details/${item.id}`;   \r\n          item.imgpath = (item.poster_path ? (API_IMAGES + item.poster_path) : (process.env.PUBLIC_URL+'/movie.jpg'));\r\n          item.description2 = (item.job && item.job.trim());\r\n          item.description3 = `Release: ${setDateFormat(item.first_air_date)}`;\r\n          personTVSERIES.push(item);\r\n        }); //data.cast.map((item) => {        \r\n      } //if (data.hasOwnProperty(\"crew\")) {\r\n      // After, in the end, do descrescent Order\r\n      personTVSERIES.sort((a, b) => (a.first_air_date > b.first_air_date) ? -1 : 1);\r\n      setContentTVSeries(personTVSERIES);\r\n      //document.getElementById(\"contentTVSeries\").style.visibility = (personTVSERIES.length > 0) ? \"visible\" : \"hidden\" ;\r\n    } //if ((data) && (data.hasOwnProperty(\"cast\"))) {   \r\n  };\r\n  // ------------------------------------------------->\r\n  useEffect(() => {\r\n    window.scroll(0, 0);\r\n    getContentDetails();\r\n    getContentMovies();\r\n    getContentTVSeries();\r\n  },[]);\r\n  // ------------------------------------------------->\r\n  const setDateFormat = (date) => {\r\n    let result = '';\r\n    if (date) {\r\n      const newDateFormat = new Date(date);\r\n      result = newDateFormat.toLocaleDateString();\r\n    }\r\n    return result;\r\n  };\r\n  // ------------------------------------------------->\r\n  const setVoteClass = (vote) => {\r\n    if (vote) {\r\n      document.getElementById(\"contentVote\").style.visibility=\"visible\";\r\n      if (vote >= 8) { return 'green'; }\r\n      else if (vote >= 6) { return 'orange'; }\r\n      else { return 'red'; }      \r\n    }\r\n  };\r\n  // ------------------------------------------------->\r\n  // -------------------- \"RENDER\" ------------------ //\r\n  return ( \r\n    <div className=\"contentContainer\">\r\n      <div id=\"ContentDetails\" class=\"details\">\r\n        <div id=\"contentDetailsImg\" class=\"detailsImg\">\r\n          <img src={content.profile_path ? `${API_IMAGES}/${content.profile_path}`:(process.env.PUBLIC_URL+'/movie.jpg')} \r\n              alt={content.name} />\r\n        </div>\r\n        <div id=\"contentDetailsInfo\" class=\"detailsInfo\">\r\n          <div id=\"contentDetailsInfoHeader\" class=\"detailsInfoHeader\">\r\n             <p class=\"title\">NAME</p>\r\n            <h1>{content.name}</h1>\r\n          </div>\r\n          <div id=\"contentDetailsInfoBody\" class=\"detailsInfoBody\">\r\n            <p class=\"title\" >PROFILE</p>\r\n            <p style={{textAlign: \"justify\"}}>{content.biography || '... no biography ...'}</p>\r\n            <p>\r\n              <div style={{float: \"left\"}}>            \r\n              </div>\r\n              <div id=\"contentVote\" style={{visibility: \"hidden\", float: \"right\"}}>\r\n                <hg>Popularity:</hg>&nbsp;&nbsp;<span class={`tag ${setVoteClass(content.popularity)}`}>{content.popularity}</span>\r\n              </div></p>\r\n            <br style={{clear: \"both\"}}/>\r\n            <p>\r\n              <div>\r\n                <hg>Birthday:</hg>&nbsp;&nbsp;{setDateFormat(content.birthday)}&nbsp;&nbsp;&nbsp;&nbsp;\r\n                <hg>Place of Birth:</hg>&nbsp;&nbsp;{content.place_of_birth}\r\n                <br/>  \r\n                {content.deathday && \r\n                  <hg>Deathday:</hg>  `${setDateFormat(content.deathday)}` }\r\n              </div></p>\r\n            <p>\r\n              <hg>Home Page:</hg>&nbsp;&nbsp;<a href={content.homepage} target=\"_blank\" rel=\"noreferrer noopener\">{content.homepage}</a></p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div id=\"contentMovies\" class=\"detailsBox\">\r\n        <p class=\"title\">Found {contentMovies.length} MOVIES appearances (ordered by Release Date)</p>\r\n        <div id=\"contentMoviesIn\" class=\"detailsBoxIn\">       \r\n            {contentMovies.map(item => { \r\n            return (\r\n              < ContentRow key={item.id}\r\n                  rowId={item.id}\r\n                  rowType={item.type}\r\n                  rowLink={item.link}\r\n                  rowImgPath={item.imgpath}\r\n                  rowDescription1={item.title}                  \r\n                  rowDescription2={item.description2}\r\n                  rowDescription3={item.description3}\r\n                   />); })}   \r\n            <br/>\r\n        </div>\r\n      </div>\r\n      <div id=\"contentTVSeries\" class=\"detailsBox\">\r\n        <p class=\"title\">Found {contentTVSeries.length} TV/Series appearances (ordered by Release Date)</p>\r\n        <div id=\"contentTVSeriesIn\" class=\"detailsBoxIn\">\r\n          {contentTVSeries.map(item => { \r\n              return (\r\n                < ContentRow key={item.id}\r\n                    rowId={item.id}\r\n                    rowType={item.type}\r\n                    rowLink={item.link}\r\n                    rowImgPath={item.imgpath}\r\n                    rowDescription1={item.name}                  \r\n                    rowDescription2={item.description2}\r\n                    rowDescription3={item.description3}\r\n                    />); })}   \r\n              <br/>          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// ------------------------------------------------->\r\nexport default withRouter(PersonsDetails);\r\n// ------------------------------------------------->","import './App.css';\nimport React from \"react\";\nimport { Router, Route, Switch } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport All from './Pages/All/All';\nimport Movies from './Pages/Movies/Movies';\nimport MoviesDetails from './Pages/Movies/MoviesDetails';\nimport Series from './Pages/Series/Series';\nimport SeriesDetails from './Pages/Series/SeriesDetails';\nimport Persons from './Pages/Persons/Persons';\nimport PersonsDetails from './Pages/Persons/PersonsDetails';\nimport Container from '@material-ui/core/Container';\nimport { createBrowserHistory } from \"history\";\n\nexport const appHistory = createBrowserHistory();\n\nconst API_IMAGES = `https://image.tmdb.org/t/p/w1280`;\n\nconst API_ALL = `https://api.themoviedb.org/3/trending/all/week?api_key=ddeaf71f8f5eb42fd183f981de0978e8`;\nconst API_ALL_SEARCH = `https://api.themoviedb.org/3/search/multi?api_key=ddeaf71f8f5eb42fd183f981de0978e8&language=en-US&include_adult=false`;\n\nconst API_MOVIES = `https://api.themoviedb.org/3/trending/movie/week?api_key=ddeaf71f8f5eb42fd183f981de0978e8`;\nconst API_MOVIES_SEARCH = `https://api.themoviedb.org/3/search/movie?api_key=ddeaf71f8f5eb42fd183f981de0978e8&language=en-US&include_adult=false`;\n\nconst API_TVS = `https://api.themoviedb.org/3/trending/tv/week?api_key=ddeaf71f8f5eb42fd183f981de0978e8`;\nconst API_TVS_SEARCH = `https://api.themoviedb.org/3/search/tv?api_key=ddeaf71f8f5eb42fd183f981de0978e8&language=en-US&include_adult=false`;\n\nconst API_PERSONS = `https://api.themoviedb.org/3/trending/person/week?api_key=ddeaf71f8f5eb42fd183f981de0978e8`;\nconst API_PERSONS_SEARCH = `https://api.themoviedb.org/3/search/person?api_key=ddeaf71f8f5eb42fd183f981de0978e8&language=en-US&include_adult=false`;\n\n///---------------------\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {searchTypeMedia: 'all',\n                  searchUrl: API_ALL,\n                  searchUrlOptions: API_ALL_SEARCH,\n                  searchQuery: '',\n                  searchQueryShowOptions: false,\n                  searchQueryOptions: []\n                  };\n  }\n\n  componentDidUpdate = () => {\n    //this.setState(state => ({ searchQueryShowOptions: false }));\n  }\n\n  searchTypeOnSubmit = (e) => {\n    const typeMedia = e.target.value;\n    this.setState((state => ({ searchTypeMedia: typeMedia })));\n    const queryValue = this.state.searchQuery;    \n    this.changeSearchURL(typeMedia, queryValue)\n    this.changeSearchPAGE(typeMedia);\n  }  \n\n  // input change\n  searchQueryOnChange = (e, value, reason) => {     //input onChange\n    if (e) {\n      if (e.type === 'change') {\n        let queryValue = value;\n        if ((queryValue === null) || (queryValue === '')) {\n          this.clearSearchQuery();\n        } else {\n          this.setState(state => ({ searchQuery: queryValue}));\n          this.setState(state => ({ searchQueryShowOptions: (queryValue.length >= 5 )}));\n        }\n      } else if (e.type === 'click') { \n        if ((reason === 'clear') && ((value === '') || (value === null))) {\n          this.clearSearchQuery();\n        } else if ((reason === 'reset') && (value.length > 0)) {\n          this.setState(state => ({ searchQuery: value}));\n        }\n      } else if (e.type === 'keydown') {\n        if (e.key === 'Enter') {\n          this.searchQueryOnSubmit(e);\n        }\n      } // if (e.type === 'change') {\n    } // if (e) {\n  }\n  // btn onClick\n  searchQueryOnSubmit = (e) => { \n    this.setState(state => ({ searchQueryShowOptions: false }));\n    this.changeSearchURL(this.state.searchTypeMedia, this.state.searchQuery);\n    const history = appHistory;\n    if (history.location.pathname.indexOf('details') > -1) {\n      this.changeSearchPAGE(this.state.searchTypeMedia);     \n    }\n  }\n  //\n  searchQuerySelected = (option, value) => {\n    return (option.name === value.name);\n  }\n  \n  clearSearchQuery = () => {\n    this.setState(state => ({ searchQuery: ''}));\n    this.setState(state => ({ searchQueryShowOptions: false}));\n    this.setState(state => ({ searchQueryOptions: []}));\n    this.changeSearchURL(this.state.searchTypeMedia, '');\n    const history = appHistory;    \n    if (history.location.pathname.indexOf('details') > -1) {\n      this.changeSearchPAGE(this.state.searchTypeMedia);     \n    }\n  }\n\n  changeSearchURL = (typeMedia, searchQuery) => {\n    this.setState(state => ({ searchQueryShowOptions: false}));\n    let strSearchUrl = '';\n    let strSearchUrlOptions = '';\n    if (typeMedia === 'movies') {\n      strSearchUrl = (searchQuery !=='') ? (API_MOVIES_SEARCH + `&query=${searchQuery}`) : API_MOVIES;\n      strSearchUrlOptions = API_MOVIES_SEARCH;\n    } else if (typeMedia === 'tv') {\n      strSearchUrl = (searchQuery !=='') ? (API_TVS_SEARCH + `&query=${searchQuery}`) : API_TVS;\n      strSearchUrlOptions = API_TVS_SEARCH;    \n    } else if (typeMedia === 'person') { \n      strSearchUrl = (searchQuery !=='') ? (API_PERSONS_SEARCH + `&query=${searchQuery}`) : API_PERSONS;\n      strSearchUrlOptions = API_PERSONS_SEARCH;\n    } else {\n      strSearchUrl = (searchQuery !=='') ? (API_ALL_SEARCH + `&query=${searchQuery}`) : API_ALL;\n      strSearchUrlOptions = API_ALL_SEARCH;\n    }\n    this.setState(state => ({ searchUrl: strSearchUrl }));\n    this.setState(state => ({ searchUrlOptions: strSearchUrlOptions }));\n  }\n  \n  changeSearchPAGE = (typeMedia) => {\n    this.setState(state => ({ searchQueryShowOptions: false}));\n    const history = appHistory;\n    if (typeMedia === 'movies') {\n      history.push(\"/movies/\");\n    } else if (typeMedia === 'tv') {\n      history.push(\"/series/\");\n    } else if (typeMedia === 'person') { \n      history.push(\"/persons/\");\n    } else {\n      history.push(\"/\");\n    }\n  }\n\n  //---> RENDER <---//\n  render() {\n    return (\n    <Router history={appHistory}>\n      <div class='app'>\n        <Container maxWidth='lg'>\n          <Header key={10101}\n                  searchTypeMedia={this.state.searchTypeMedia} \n                  searchTypeOnSubmit={this.searchTypeOnSubmit} \n                  searchQueryValue={this.state.searchQuery}         \n                  searchQueryOnChange={this.searchQueryOnChange} \n                  searchQueryOnSubmit={this.searchQueryOnSubmit} \n                  searchQuerySelected={this.searchQuerySelected}\n                  searchQueryShowOptions={this.state.searchQueryShowOptions} \n                  API_URL_OPTIONS={this.state.searchUrlOptions}/>     \n          <Switch>\n            <Route path='/movies/details/:id' \n                   render={(props) => <MoviesDetails id={props} />} />\n            <Route path='/movies/' exact>\n              <Movies key={1201} API_URL={this.state.searchUrl}\n                      API_URL_OPTIONS={this.state.searchUrlOptions}\n                      API_IMAGES={API_IMAGES}/></Route>          \n            <Route path='/series/details/:id' \n                   render={(props) => <SeriesDetails id={props} />} />\n            <Route path='/series/' exact >\n              <Series key={1301} API_URL={this.state.searchUrl}\n                      API_URL_OPTIONS={this.state.searchUrlOptions}\n                      API_IMAGES={API_IMAGES}/></Route>\n            <Route path='/persons/details/:id' \n                   render={(props) => <PersonsDetails id={props} />} />\n            <Route path='/persons/' exact >\n              <Persons key={1401} API_URL={this.state.searchUrl}\n                       API_URL_OPTIONS={this.state.searchUrlOptions}\n                       API_IMAGES={API_IMAGES}/></Route>\n            <Route path='/' exact>\n              <All key={1101} API_URL={this.state.searchUrl}\n                   API_URL_OPTIONS={this.state.searchUrlOptions}\n                   API_IMAGES={API_IMAGES}/></Route> \n          </Switch>\n        </Container>       \n      </div>\n    </Router>\n\n  )};\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}